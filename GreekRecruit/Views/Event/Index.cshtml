@model List<GreekRecruit.Models.Event>
@{
    ViewData["Title"] = "All Events";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@functions {
    string GetSemesterLabel(DateTime date)
    {
        int year = date.Year;
        if (date.Month <= 6 && !(date.Month == 6 && date.Day > 1))
        {
            return $"Spring {year}";
        }
        else
        {
            return $"Fall {year}";
        }
    }
}
@{
    var username = User.Identity?.Name;
    var context = Context.RequestServices.GetService(typeof(SqlDataContext)) as SqlDataContext;
    var user = context?.Users.FirstOrDefault(u => u.username == username);
    bool isAdmin = false;
    if (user?.role == "Admin")
    {
        isAdmin = true;
    }

}

<nav class="navbar navbar-light bg-light p-3 d-flex justify-content-between">
    <div class="d-flex align-items-center gap-2">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center">
            <img src="/images/greekrecruit_logo.png" alt="Home" width="40" height="40" class="d-inline-block align-top">
            <span class="ms-2">Home</span>
        </a>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="eventsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Events
            </button>
            <ul class="dropdown-menu" aria-labelledby="eventsDropdown">
            @if (isAdmin)
            {
                <li><a class="dropdown-item" asp-controller="AddEvent" asp-action="Index">Add Event</a></li>
            }
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="pnmsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                PNMs
            </button>
            <ul class="dropdown-menu" style="white-space: nowrap; min-width: max-content;" aria-labelledby="pnmsDropdown">
               
                <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="Index">Add PNM</a></li>
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="AddPNMCSV">Import PNMs from CSV</a></li>
                }
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="formsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Interest Forms
            </button>
            <ul class="dropdown-menu" aria-labelledby="formsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Create">Add Interest Form</a></li>
                }
                <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Index">View Forms/Submissions</a></li>
            </ul>
        </div>

    </div>


    <div class="d-flex align-items-center gap-2">


        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle rounded-circle p-2"
                    type="button"
                    id="userMenuButton"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                @User.Identity?.Name?.Substring(0, 1).ToUpper()
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userMenuButton">
                <li><a asp-controller="Profile" asp-action="Index" class="dropdown-item">Profile</a></li>
                <li><a asp-controller="Dashboard" asp-action="Index" class="dropdown-item">Stats & Insights</a></li>
                @{
                    if (isAdmin)
                    {
                        <li><a asp-controller="Profile" asp-action="AddUsers" class="dropdown-item">Add Users</a></li>
                        <li><a asp-controller="AdminTask" asp-action="Index" class="dropdown-item">View Tasks</a></li>
                    }
                }
                <li><a asp-action="Logout" class="btn btn-primary">Logout</a></li>
            </ul>
        </div>
    </div>
</nav>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<div class="container mt-5">
    <h2 class="mb-4">All Events</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            No events have been added yet.
        </div>
    }
    else
    {
        var grouped = Model
        .OrderBy(e => e.event_datetime)
        .GroupBy(e => GetSemesterLabel(e.event_datetime));

        foreach (var semesterGroup in grouped)
        {
            <h3 class="mt-4">@semesterGroup.Key</h3>

            <div class="row row-cols-1 row-cols-md-2 g-4">
                @foreach (var evt in semesterGroup)
                {
                    <div class="col">
                        <div class="card shadow-sm border-0 h-100">
                            <div class="card-body">
                                <h5 class="card-title">@evt.event_name</h5>
                                <h6 class="card-subtitle mb-2 text-muted">
                                    @evt.event_datetime.ToString("MMMM dd, yyyy • h:mm tt")
                                </h6>
                                <p class="card-text mb-1">
                                    <strong>Location:</strong> @evt.event_address
                                </p>
                                <p class="card-text">
                                    <strong>Description:</strong>
                                    @(string.IsNullOrWhiteSpace(evt.event_description) ? "—" : evt.event_description)
                                </p>
                                @if (isAdmin == true) {
                                    <button class="btn btn-outline-secondary btn-sm mt-2" data-bs-toggle="modal" data-bs-target="#qrModal-@evt.event_id">
                                        Show QR Code
                                    </button>
                                }
                                <a asp-controller="EventAttendance"
                                   asp-action="ViewAttendees"
                                   asp-route-event_id="@evt.event_id"
                                   class="btn btn-outline-primary btn-sm mt-2 ms-2">
                                    View Attendees
                                </a>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade" id="qrModal-@evt.event_id" tabindex="-1" aria-labelledby="qrModalLabel-@evt.event_id" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="qrModalLabel-@evt.event_id">QR Code for @evt.event_name</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-center">
                                    @{
                                        var qrUrl = Url.Action("Index", "EventAttendance", new { event_id = evt.event_id }, protocol: Context.Request.Scheme);
                                        var encodedUrl = Uri.EscapeDataString(qrUrl);
                                        var imageUrl = $"https://api.qrserver.com/v1/create-qr-code/?data={encodedUrl}&size=200x200";
                                        var fileName = $"EventQR{evt.event_id}.jpg";
                                    }
                                    
                                    <img id="qr-img-@evt.event_id" src="@imageUrl" alt="QR Code for @evt.event_name" class="mb-2" style="max-width: 200px;" />

                                    <div class="mt-3">
                                        <button class="btn btn-primary" onclick="downloadQR('@imageUrl', '@fileName')">
                                            Download QR Code
                                        </button>
                                    </div>

                                    <p class="small text-muted mt-2">@qrUrl</p>
                                </div>


                            </div>
                        </div>
                    </div>
                }

            </div>
        }
    }
    <div class="text-end mt-4">
        <a asp-controller="Home" asp-action="Index" class="btn btn-dark">
            ← Back to Home
        </a>
    </div>
</div>

<script>
    function downloadQR(imageUrl, fileName) {
        fetch(imageUrl)
            .then(response => response.blob())
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = fileName;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            })
            .catch(err => alert("Something went wrong downloading the QR code."));
    }
</script>
