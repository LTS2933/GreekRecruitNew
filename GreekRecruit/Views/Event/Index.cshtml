@model List<GreekRecruit.Models.Event>
@{
    ViewData["Title"] = "All Events";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@functions {
    string GetSemesterLabel(DateTime date)
    {
        int year = date.Year;
        if (date.Month <= 6 && !(date.Month == 6 && date.Day > 1))
        {
            return $"Spring {year}";
        }
        else
        {
            return $"Fall {year}";
        }
    }
}
@{
    var username = User.Identity?.Name;
    var context = Context.RequestServices.GetService(typeof(SqlDataContext)) as SqlDataContext;
    var user = context?.Users.FirstOrDefault(u => u.username == username);
    bool isAdmin = false;
    if (user?.role == "Admin")
    {
        isAdmin = true;
    }

}


<nav class="navbar navbar-light bg-light p-3 d-flex justify-content-between">
    <div class="d-flex align-items-center gap-2">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center">
            <img src="/images/greekrecruit_logo.jpg" alt="Home" width="40" height="40" class="d-inline-block align-top">
            <span class="ms-2">Home</span>
        </a>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="eventsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Events
            </button>
            <ul class="dropdown-menu" aria-labelledby="eventsDropdown">
            @if (isAdmin)
            {
                <li><a class="dropdown-item" asp-controller="AddEvent" asp-action="Index">Add Event</a></li>
            }
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="pnmsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                PNMs
            </button>
            <ul class="dropdown-menu" style="white-space: nowrap; min-width: max-content;" aria-labelledby="pnmsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="AddPNMCSV">Import PNMs from CSV</a></li>
                }
                <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="Index">Add PNM</a></li>
            </ul>
        </div>

    </div>


    <div class="d-flex align-items-center gap-2">


        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle rounded-circle p-2"
                    type="button"
                    id="userMenuButton"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                @User.Identity?.Name?.Substring(0, 1).ToUpper()
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userMenuButton">
                <li><a asp-controller="Profile" asp-action="Index" class="dropdown-item">Profile</a></li>
                @{
                    if (isAdmin)
                    {
                        <li><a asp-controller="Profile" asp-action="AddUsers" class="dropdown-item">Add Users</a></li>
                    }
                }
                <li><a asp-action="Logout" class="btn btn-primary">Logout</a></li>
            </ul>
        </div>
    </div>
</nav>


<div class="container mt-5">
    <h2 class="mb-4">All Events</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            No events have been added yet.
        </div>
    }
    else
    {
        var grouped = Model
        .OrderBy(e => e.event_datetime)
        .GroupBy(e => GetSemesterLabel(e.event_datetime));

        foreach (var semesterGroup in grouped)
        {
            <h3 class="mt-4">@semesterGroup.Key</h3>

            <div class="row row-cols-1 row-cols-md-2 g-4">
                @foreach (var evt in semesterGroup)
                {
                    <div class="col">
                        <div class="card shadow-sm border-0 h-100">
                            <div class="card-body">
                                <h5 class="card-title">@evt.event_name</h5>
                                <h6 class="card-subtitle mb-2 text-muted">
                                    @evt.event_datetime.ToString("MMMM dd, yyyy • h:mm tt")
                                </h6>
                                <p class="card-text mb-1">
                                    <strong>Location:</strong> @evt.event_address
                                </p>
                                <p class="card-text">
                                    <strong>Description:</strong>
                                    @(string.IsNullOrWhiteSpace(evt.event_description) ? "—" : evt.event_description)
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }
</div>
