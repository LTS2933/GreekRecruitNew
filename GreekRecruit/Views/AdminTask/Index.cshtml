@model List<GreekRecruit.Models.AdminTask>
@{
    ViewData["Title"] = "All Tasks";
}


@{
    var username = User.Identity?.Name;
    var context = Context.RequestServices.GetService(typeof(SqlDataContext)) as SqlDataContext;
    var user = context?.Users.FirstOrDefault(u => u.username == username);
    bool isAdmin = false;
    if (user?.role == "Admin")
    {
        isAdmin = true;
    }
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<nav class="navbar navbar-light bg-light p-3 d-flex justify-content-between">
    <div class="d-flex align-items-center gap-2">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center">
            <img src="/images/greekrecruit_logo.png" alt="Home" width="40" height="40" class="d-inline-block align-top">
            <span class="ms-2">Home</span>
        </a>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="eventsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Events
            </button>
            <ul class="dropdown-menu" aria-labelledby="eventsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddEvent" asp-action="Index">Add Event</a></li>
                }
                <li><a class="dropdown-item" asp-controller="Event" asp-action="Index">View Events</a></li>
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="pnmsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                PNMs
            </button>
            <ul class="dropdown-menu" style="white-space: nowrap; min-width: max-content;" aria-labelledby="pnmsDropdown">

                <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="Index">Add PNM</a></li>
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="AddPNMCSV">Import PNMs from CSV</a></li>
                }
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="formsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Interest Forms
            </button>
            <ul class="dropdown-menu" aria-labelledby="formsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Create">Add Interest Form</a></li>
                }
                <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Index">View Forms/Submissions</a></li>
            </ul>
        </div>

    </div>


    <div class="d-flex align-items-center gap-2">


        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle rounded-circle p-2"
                    type="button"
                    id="userMenuButton"
                    data-bs-toggle="dropdown"
                    aria-expanded="false">
                @User.Identity?.Name?.Substring(0, 1).ToUpper()
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userMenuButton">
                <li><a asp-controller="Profile" asp-action="Index" class="dropdown-item">Profile</a></li>
                <li><a asp-controller="Dashboard" asp-action="Index" class="dropdown-item">Stats & Insights</a></li>
                @{
                    if (isAdmin)
                    {
                        <li><a asp-controller="Profile" asp-action="AddUsers" class="dropdown-item">Add Users</a></li>
                        <li><a asp-controller="AdminTask" asp-action="Index" class="dropdown-item">View Tasks</a></li>
                    }
                }
                <li><a asp-action="Logout" class="btn btn-primary">Logout</a></li>
            </ul>
        </div>
    </div>
</nav>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>All Tasks</h2>
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">← Back to Home</a>
    </div>

    @if (isAdmin)
    {
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-primary text-white">
                <strong>Add New Task</strong>
            </div>
            <div class="card-body">
                <form asp-action="AddTask" method="post">
                    @Html.AntiForgeryToken()
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Title</label>
                            <input type="text" name="title" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Due Date (optional)</label>
                            <input type="date" name="due_date" class="form-control" />
                        </div>
                        <div class="col-12">
                            <label class="form-label">Description</label>
                            <textarea name="description" class="form-control" rows="3"></textarea>

                        </div>
                        <div class="col-12 text-end">
                            <button type="submit" class="btn btn-success">Add Task</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info">No tasks have been added yet.</div>
    }
    else
    {
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Due Date</th>
                    <th>Status</th>
                    <th>Date Created</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model)
                {
                    <tr>
                        <td>@task.title</td>
                        <td>@task.task_description</td>
                        <td>@(task.due_date?.ToShortDateString() ?? "-")</td>
                        <td>
                            @if (task.is_completed)
                            {
                                <span class="badge bg-success">Completed</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Incomplete</span>
                            }
                        </td>
                        <td>@task.date_created.ToShortDateString()</td>
                        <td class="d-flex gap-2">
                            <form asp-action="ToggleComplete" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="task_id" value="@task.task_id" />
                                <button type="submit" class="btn btn-sm @(task.is_completed ? "btn-secondary" : "btn-success")">
                                    @(task.is_completed ? "Mark Incomplete" : "Mark Complete")
                                </button>
                            </form>

                            <form asp-action="Delete" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this task?');">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="task_id" value="@task.task_id" />
                                <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

