// <auto-generated />
using System;
using GreekRecruit.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreekRecruit.Migrations
{
    [DbContext(typeof(SqlDataContext))]
    [Migration("20250405024717_AddEventTable")]
    partial class AddEventTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreekRecruit.Models.Comment", b =>
                {
                    b.Property<int>("comment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("comment_id"));

                    b.Property<string>("comment_author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comment_author_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("comment_dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("comment_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comment_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pnm_id")
                        .HasColumnType("int");

                    b.HasKey("comment_id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GreekRecruit.Models.Event", b =>
                {
                    b.Property<int>("event_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("event_id"));

                    b.Property<string>("event_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("event_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("event_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("event_id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("GreekRecruit.Models.Organization", b =>
                {
                    b.Property<int>("organization_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("organization_id"));

                    b.Property<string>("organization_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("organization_id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("GreekRecruit.Models.PNM", b =>
                {
                    b.Property<int>("pnm_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pnm_id"));

                    b.Property<int>("organization_id")
                        .HasColumnType("int");

                    b.Property<string>("pnm_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pnm_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pnm_fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("pnm_gpa")
                        .HasColumnType("float");

                    b.Property<string>("pnm_instagramhandle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pnm_lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pnm_major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pnm_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("pnm_profilepicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("pnm_schoolyear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pnm_status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pnm_id");

                    b.ToTable("PNMs");
                });

            modelBuilder.Entity("GreekRecruit.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organization_id")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
